import type { NextPage } from "next";
import { useSession, signIn, getSession, signOut } from "next-auth/react";
import Head from "next/head";
import { useEffect } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const { data, isLoading } = trpc.useQuery([
    "example.hello",
    { text: "from tRPC" },
  ]);

  const session = useSession();
  console.log(session);

  useEffect(() => {
    getSession().then((session) => {
      console.log("session", session);
    });
  }, []);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1>
          Create <span>T3</span> App
        </h1>

        <div>
          <h3>This stack uses:</h3>
          <ul>
            <li>
              <a href="https://nextjs.org" target="_blank" rel="noreferrer">
                Next.js
              </a>
            </li>
            <li>
              <a href="https://trpc.io" target="_blank" rel="noreferrer">
                tRPC
              </a>
            </li>
            <li>
              <a
                href="https://typescriptlang.org"
                target="_blank"
                rel="noreferrer"
              >
                TypeScript
              </a>
            </li>
          </ul>

          <div>{data ? <p>{data.greeting}</p> : <p>Loading..</p>}</div>

          <div>
            {session && session.status === "authenticated" ? (
              <>
                <p>{session.data?.user?.email}</p>
                <button onClick={() => signOut()}>Log out</button>
              </>
            ) : (
              <button onClick={() => signIn()}>Log in</button>
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default Home;
